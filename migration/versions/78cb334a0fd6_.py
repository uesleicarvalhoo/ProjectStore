"""Create inital database of application.

Revision ID: 78cb334a0fd6
Revises: First migration
Create Date: 2021-10-01 17:51:52.747538

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "78cb334a0fd6"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("access_level", sa.Enum("ANONIMOUS", "USER", "SUPER_USER", name="access_level"), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("password_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=False)
    op.create_table(
        "clients",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("phone", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("owner_id", sqlmodel.sql.sqltypes.GUID()),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_clients_email"), "clients", ["email"], unique=False)
    op.create_index(op.f("ix_clients_name"), "clients", ["name"], unique=False)
    op.create_table(
        "files",
        sa.Column("bucket_key", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("uploaded_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("bucket_key"),
    )
    op.create_index(op.f("ix_files_bucket_key"), "files", ["bucket_key"], unique=False)
    op.create_index(op.f("ix_files_hash"), "files", ["hash"], unique=False)
    op.create_table(
        "fiscal_notes",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("purchase_date", sa.Date(), nullable=False),
        sa.Column("file_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["files.bucket_key"],
        ),
        sa.Column("owner_id", sqlmodel.sql.sqltypes.GUID()),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_fiscal_notes_purchase_date"), "fiscal_notes", ["purchase_date"], unique=False)
    op.create_table(
        "orders",
        sa.Column("status", sa.Enum("PENDING", "COMPLETED", "CANCELED", name="orderstatus"), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("client_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.Column("owner_id", sqlmodel.sql.sqltypes.GUID()),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
    )
    op.create_index(op.f("ix_orders_client_id"), "orders", ["client_id"], unique=False)
    op.create_index(op.f("ix_orders_date"), "orders", ["date"], unique=False)
    op.create_table(
        "items",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("avaliable", sa.Boolean(), nullable=False),
        sa.Column("buy_value", sa.Float(), nullable=False),
        sa.Column("sugested_sell_value", sa.Float(), nullable=False),
        sa.Column("fiscal_note_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("file_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["files.bucket_key"],
        ),
        sa.ForeignKeyConstraint(
            ["fiscal_note_id"],
            ["fiscal_notes.id"],
        ),
        sa.Column("owner_id", sqlmodel.sql.sqltypes.GUID()),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_items_avaliable"), "items", ["avaliable"], unique=False)
    op.create_index(op.f("ix_items_code"), "items", ["code"], unique=False)
    op.create_index(op.f("ix_items_fiscal_note_id"), "items", ["fiscal_note_id"], unique=False)
    op.create_index(op.f("ix_items_name"), "items", ["name"], unique=False)
    op.create_table(
        "order_details",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("item_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("buy_value", sa.Float(), nullable=False),
        sa.Column("sell_value", sa.Float(), nullable=False),
        sa.Column("order_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_order_details_item_id"), "order_details", ["item_id"], unique=False)
    op.create_index(op.f("ix_order_details_order_id"), "order_details", ["order_id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_order_details_order_id"), table_name="order_details")
    op.drop_index(op.f("ix_order_details_item_id"), table_name="order_details")
    op.drop_table("order_details")
    op.drop_index(op.f("ix_items_avaliable"), table_name="items")
    op.drop_index(op.f("ix_items_name"), table_name="items")
    op.drop_index(op.f("ix_items_fiscal_note_id"), table_name="items")
    op.drop_index(op.f("ix_items_code"), table_name="items")
    op.drop_table("items")
    op.drop_index(op.f("ix_orders_date"), table_name="orders")
    op.drop_index(op.f("ix_orders_client_id"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_fiscal_notes_purchase_date"), table_name="fiscal_notes")
    op.drop_table("fiscal_notes")
    op.drop_index(op.f("ix_files_hash"), table_name="files")
    op.drop_index(op.f("ix_files_bucket_key"), table_name="files")
    op.drop_table("files")
    op.drop_index(op.f("ix_clients_name"), table_name="clients")
    op.drop_index(op.f("ix_clients_email"), table_name="clients")
    op.drop_table("clients")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
